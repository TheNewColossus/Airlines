version: "2.2.1"

volumes: 
  metadata_data: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${metadata_data_folder} 
  middle_var: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${middle_var_folder} 
  historical_var: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${historical_var_folder}
  broker_var: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${broker_var_folder} 
  coordinator_var: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${coordinator_var_folder} 
  router_var: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${router_var_folder} 
  druid_shared: 
    driver_opts: 
      type: none 
      o: bind 
      device: ${druid_shared_folder} 
  grafana_storage: 
    driver_opts:
      type: none 
      o: bind
      device: ${grafana_storage_folder}
  kafka_storage: 
    driver_opts:
      type: none 
      o: bind
      device: ${kafka_storage_folder}
  file_storage: 
    driver_opts:
      type: none 
      o: bind
      device: ${file_storage_folder}
  python_storage:
    driver_opts:
      type: none
      o: bind
      device: ${python_storage_folder}

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ${metadata_data_folder}:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_USER}
    env_file:
      - .env

  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    environment:
      - GF_INSTALL_PLUGINS=grafadruid-druid-datasource
    ports:
      - "3000:3000"
    volumes:
      - ${grafana_storage_folder}:/var/lib/grafana
    env_file:
      - .env

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.10
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    hostname: broker
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - ${kafka_storage_folder}:/var/lib/kafka/data
      - ${file_storage_folder}:/var/lib/kafka/
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_METADATA_FETCH_TIMEOUT_MS: 30000  
      KAFKA_REQUEST_TIMEOUT_MS: 30000
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  coordinator:
    image: apache/druid:31.0.1
    container_name: coordinator
    volumes:
      - ${druid_shared_folder}:/opt/shared
      - ${coordinator_var_folder}:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - .env

  broker:
    image: apache/druid:31.0.1
    container_name: broker
    volumes:
      - ${broker_var_folder}:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - .env

  historical:
    image: apache/druid:31.0.1
    container_name: historical
    volumes:
      - ${druid_shared_folder}:/opt/shared
      - ${historical_var_folder}:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - .env

  middlemanager:
    image: apache/druid:31.0.1
    container_name: middlemanager
    volumes:
      - ${druid_shared_folder}:/opt/shared
      - ${middle_var_folder}:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - .env

  router:
    image: apache/druid:31.0.1
    container_name: router
    volumes:
      - ${router_var_folder}:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - .env
    
  python:
    image: python:3.12-bookworm
    container_name: python
    depends_on:
      - kafka
    volumes:
      - ${python_storage_folder}:/app
    working_dir: /app
    ports:
      - '2000:2000'
    command: bash -c "python3 main.py"
    env_file:
      - .env